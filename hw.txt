CS32 HW 5
Ethan Cheng

1.a.

             50
       20          60
   10     40          70
    15   30        66    80
        25 38           75

1.b.

inorder:
10
15
20
25
30
38
40
50
60
66
70
75
80

preorder:
50
20
10
15
40
30
25
38
60
70
66
80
75

postorder:
15
10
25
38
30
40
20
66
75
80
70
60
50

1.c.

             50
       25          60
   10     40          70
    15   38        66    80
                        75

2.a.

struct Node {
	int data;
	Node* left;
	Node* right;
	Node* parent;
};

2.b.

void insert(Node* root, int data)
{
	if (root == nullptr) {
		root = new Node{data, nullptr, nullptr, nullptr};
		return;
	}

	Node* curr = root;
	while (curr != nullptr) {
		if (data < curr->data) {
			if (curr->left == nullptr) {
				curr->left = new Node{data, nullptr, nullptr, curr};
				return;
			}
			curr = curr->left;
		} else {
			if (curr->right == nullptr) {
				curr->right = new Node{data, nullptr, nullptr, curr};
				return;
			}
			curr = curr->right;
		}
	}
}

3.a.

    7
 5    6
3 1  4

3.b.

+---+---+---+---+---+---+
| 7 | 5 | 6 | 3 | 1 | 4 |
+---+---+---+---+---+---+

3.c.

+---+---+---+---+---+
| 6 | 5 | 4 | 3 | 1 |
+---+---+---+---+---+

4.a.

O(S + C)

4.b.

O(log(C) + S)

4.c.

O(log(C) + log(S))

4.d.

O(1 + log(S))

4.e.

O(1)

4.f

O(log(C) + S)

4.g.

O(1 + Slog(S))

4.h.

O(Clog(S))
